// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorios;

namespace Repositorios.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220617193750_INICIAL")]
    partial class INICIAL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.EntidadNegocio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostoSinImpuestos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Compras");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Compra");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.FichaCuidados", b =>
                {
                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("FrecuenciaRiegoCantidad")
                        .HasColumnType("int");

                    b.Property<string>("FrecuenciaRiegoUnidadTiempo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IluminacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlantaId");

                    b.HasIndex("IluminacionId");

                    b.ToTable("FichaCuidados");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Item", b =>
                {
                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CompraId", "PlantaId");

                    b.HasIndex("PlantaId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.NombreVulgar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("NombreVulgar");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlturaMax")
                        .HasColumnType("int");

                    b.Property<int>("Ambiente")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.TipoIluminacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoIluminacion");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.TipoPlanta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPlanta");
                });

            modelBuilder.Entity("Dominio.ParametroConfiguracion.Parametros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.CompraImportada", b =>
                {
                    b.HasBaseType("Dominio.EntidadesNegocio.Compra");

                    b.Property<bool>("AmericaDelSur")
                        .HasColumnType("bit");

                    b.Property<string>("MedidasSanitarias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TasaArancelesAmerica")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaImportacion")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("CompraImportada");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.CompraPlaza", b =>
                {
                    b.HasBaseType("Dominio.EntidadesNegocio.Compra");

                    b.Property<decimal>("CostoFlete")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("CompraPlaza");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.FichaCuidados", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.TipoIluminacion", "Iluminacion")
                        .WithMany()
                        .HasForeignKey("IluminacionId");

                    b.HasOne("Dominio.EntidadesNegocio.Planta", "Planta")
                        .WithOne("FichaCuidados")
                        .HasForeignKey("Dominio.EntidadesNegocio.FichaCuidados", "PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Item", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.Compra", "Compra")
                        .WithMany("ListaItems")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.EntidadesNegocio.Planta", "PlantaComprada")
                        .WithMany("ListaItems")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.NombreVulgar", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.Planta", "Planta")
                        .WithMany("ListaNombreVulgares")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Planta", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.TipoPlanta", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");
                });
#pragma warning restore 612, 618
        }
    }
}
